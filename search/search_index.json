{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u6b22\u8fce\u200b\u6765\u5230\u200b\u6211\u200b\u7684\u200b\u6587\u6863","text":"<p>\u200b\u8fd9\u200b\u662f\u200b\u6211\u200b\u7684\u200b\u6587\u6863\u200b\u9996\u9875\u200b\u3002\u200b\u4ee5\u4e0b\u200b\u662f\u200b\u6587\u6863\u200b\u7684\u200b\u4e3b\u8981\u200b\u5185\u5bb9\u200b\uff1a</p> <p>\u200b\u5165\u95e8\u200b\u6307\u5357\u200b</p> <p>\u200b\u9ad8\u7ea7\u200b\u914d\u7f6e\u200b</p>"},{"location":"advanced/configuration/","title":"\u9ad8\u7ea7\u200b\u914d\u7f6e","text":"<p>\u200b\u672c\u200b\u8282\u200b\u4ecb\u7ecd\u200b\u5982\u4f55\u200b\u8fdb\u884c\u200b\u9ad8\u7ea7\u200b\u914d\u7f6e\u200b\u3002</p>"},{"location":"advanced/configuration/#_2","title":"\u914d\u7f6e\u6587\u4ef6","text":"<ul> <li><code>config.yaml</code></li> <li>\u200b\u73af\u5883\u53d8\u91cf\u200b</li> </ul>"},{"location":"getting-started/","title":"\u7cfb\u7edf\u914d\u7f6e","text":"<p>Linux</p> <p>Windows</p>"},{"location":"getting-started/gh-pages/","title":"Usage","text":"<pre><code># \u200b\u6784\u5efa\u200b\nmkdocs build\n\n# \u200b\u90e8\u7f72\u200b\nmkdocs gh-deploy\n\n# \u200b\u6d4b\u8bd5\u200b\u672c\u5730\u200b\u9884\u89c8\u200b\nmkdocs serve\n</code></pre>"},{"location":"getting-started/OS%20Config/Linux/","title":"Install brew","text":"<pre><code>/bin/zsh -c \"$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)\"\n</code></pre>"},{"location":"getting-started/OS%20Config/Linux/#bashrc","title":".bashrc","text":"<pre><code>export PS1=\"\\e[01;36m\\][\\t] ${debian_chroot:+($debian_chroot)}\\u@\\h\\[\\e[01;35m\\]:\\w\\n\\[\\e[01;33m\\]$\\[\\e[00m\\] \"\n\nexport HF_ENDPOINT=https://hf-mirror.com\n\nalias n='nvidia-smi'\nalias nvi='watch -n 0.1 nvidia-smi'\nalias nvfind='fuser -v /dev/nvidia*'\n\nalias sdi='sudo dpkg -i'\nalias l='ls -alF -h'\nalias d='du -h --max-depth 1'\nalias cb='cat ~/.bashrc'\nalias vb='vi ~/.bashrc'\nalias sb='source ~/.bashrc'\nalias sc='screen'\nalias cc='/home/user/opt/clash/clash -d /home/user/opt/clash'\nalias tat='tmux a -t'\nalias tl='tmux ls'\nalias jfu='journalctl -f -u'\n\nfunction psfind() {\n        ps aux | head -n 1\n        ps aux | grep -E $1 | grep -v grep\n}\nfunction sp() {\n        export http_proxy=http://127.0.0.1:7891\n        export HTTP_PROXY=http://127.0.0.1:7891\n        export https_proxy=http://127.0.0.1:7891\n        export HTTPS_PROXY=http://127.0.0.1:7891\n        export all_proxy=socks://127.0.0.1:7891\n        export ALL_PROXY=socks://127.0.0.1:7891\n        echo 'set proxy'\n}\nfunction usp() {\n        unset http_proxy\n        unset HTTP_PROXY\n        unset https_proxy\n        unset HTTPS_PROXY\n        unset all_proxy\n        unset ALL_PROXY\n        echo 'unset proxy'\n}\n\n# &gt;&gt;&gt; conda initialize &gt;&gt;&gt;\nCONDA_PATH=/home/**/opt/miniconda3\nBIN_PATH=$CONDA_PATH/bin/conda\n# !! Contents within this block are managed by 'conda init' !!\n__conda_setup=\"$($BIN_PATH 'shell.bash' 'hook' 2&gt; /dev/null)\"\nif [ $? -eq 0 ]; then\n    eval \"$__conda_setup\"\nelse\n    if [ -f \"$CONDA_PATH/etc/profile.d/conda.sh\" ]; then\n        . \"$CONDA_PATH/etc/profile.d/conda.sh\"\n    else\n        export PATH=\"$CONDA_PATH/bin:$PATH\"\n    fi\nfi\nunset __conda_setup\n# &lt;&lt;&lt; conda initialize &lt;&lt;&lt;\n</code></pre>"}]}